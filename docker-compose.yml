services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chatbot-backend
    image: cutedespair/chatbot-backend:latest
    restart: unless-stopped
    env_file: backend/.env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:password@db:5432/chatbot_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    networks:
      - chatbot-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatbot-frontend
    image: cutedespair/chatbot-frontend:latest
    env_file: frontend/.env
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - chatbot-network

  db:
    image: postgres:14-alpine
    container_name: chatbot-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=chatbot_db
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - chatbot-network

  redis:
    image: redis:7-alpine
    container_name: chatbot-redis
    restart: unless-stopped
    volumes:
      - ./data/redis:/data
    networks:
      - chatbot-network

  adminer:
    image: adminer
    container_name: chatbot-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - chatbot-network

networks:
  chatbot-network:
    driver: bridge